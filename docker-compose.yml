version: '3.8'

services:
  backend:
    build: ./Backend
    ports:
      - "3070:3070"
    environment:
      - PORT=3070
      - DB_USER=postgres
      - DB_HOST=postgres
      - DB_NAME=attendance_db
      - DB_PASSWORD=admin123
      - DB_PORT=5432
      - DB_RETRIES=5
      - DB_RETRY_DELAY=3000
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3070/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./Frontend
    ports:
      - "8196:80"
    networks:
      - app-network
    depends_on:
      - backend

  hr_page:
    build: ./Hr_page
    ports:
      - "8197:80"
    networks:
      - app-network
    depends_on:
      - backend

  postgres:
    image: postgres:14
    restart: always
    ports:
      - "6629:5432"
    environment:
      POSTGRES_DB: attendance_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d attendance_db"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
